generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("HEROKU_POSTGRESQL_GOLD_URL")
}

model Franchise {
  id    String  @id @default(cuid())
  name  String
  gm    Player? @relation(fields: [gmId], references: [id], name: "gm")
  gmId  String?
  agm   Player? @relation(fields: [agmId], references: [id], name: "agm")
  agmId String?
  Teams Team[]
}

model Team {
  id          String     @id @default(cuid())
  name        String
  acronym     String
  Players     Player[]
  MatchesWon  Match[]
  HomeMatches Match[]    @relation(name: "homeTeam")
  AwayMatches Match[]    @relation(name: "awayTeam")
  Franchise   Franchise? @relation(fields: [franchiseId], references: [id])
  franchiseId String?
}

model Player {
  id             String     @id @default(cuid())
  name           String
  steamId        String // Is this even a thing we have/can get?
  discordId      String
  Team           Team?      @relation(fields: [teamId], references: [id])
  teamId         String?
  freeAgent      Boolean
  GMOfFranchise  Franchise? @relation(name: "gm")
  AGMOfFranchise Franchise? @relation(name: "agm")
}

model Season {
  id      String  @id @default(cuid())
  number  Int // The season number
  Matches Match[]
}

model Match {
  id         String  @id @default(cuid())
  HomeTeam   Team    @relation(fields: [homeTeamId], references: [id], name: "homeTeam")
  homeTeamId String
  AwayTeam   Team    @relation(fields: [awayTeamId], references: [id], name: "awayTeam")
  awayTeamId String
  Season     Season? @relation(fields: [seasonId], references: [id])
  seasonId   String?
  Winner     Team?   @relation(fields: [teamId], references: [id])
  teamId     String?
}
